package dmcblue.gambit.ai;

import interealmGames.common.serializer.Serializer;

class HexSerializer implements Serializer {
	static private var BinToHex:Map<String, String> = [
		'00000000' => '00',
		'00000001' => '01',
		'00000010' => '02',
		'00000011' => '03',
		'00000100' => '04',
		'00000101' => '05',
		'00000110' => '06',
		'00000111' => '07',
		'00001000' => '08',
		'00001001' => '09',
		'00001010' => '0a',
		'00001011' => '0b',
		'00001100' => '0c',
		'00001101' => '0d',
		'00001110' => '0e',
		'00001111' => '0f',
		'00010000' => '10',
		'00010001' => '11',
		'00010010' => '12',
		'00010011' => '13',
		'00010100' => '14',
		'00010101' => '15',
		'00010110' => '16',
		'00010111' => '17',
		'00011000' => '18',
		'00011001' => '19',
		'00011010' => '1a',
		'00011011' => '1b',
		'00011100' => '1c',
		'00011101' => '1d',
		'00011110' => '1e',
		'00011111' => '1f',
		'00100000' => '20',
		'00100001' => '21',
		'00100010' => '22',
		'00100011' => '23',
		'00100100' => '24',
		'00100101' => '25',
		'00100110' => '26',
		'00100111' => '27',
		'00101000' => '28',
		'00101001' => '29',
		'00101010' => '2a',
		'00101011' => '2b',
		'00101100' => '2c',
		'00101101' => '2d',
		'00101110' => '2e',
		'00101111' => '2f',
		'00110000' => '30',
		'00110001' => '31',
		'00110010' => '32',
		'00110011' => '33',
		'00110100' => '34',
		'00110101' => '35',
		'00110110' => '36',
		'00110111' => '37',
		'00111000' => '38',
		'00111001' => '39',
		'00111010' => '3a',
		'00111011' => '3b',
		'00111100' => '3c',
		'00111101' => '3d',
		'00111110' => '3e',
		'00111111' => '3f',
		'01000000' => '40',
		'01000001' => '41',
		'01000010' => '42',
		'01000011' => '43',
		'01000100' => '44',
		'01000101' => '45',
		'01000110' => '46',
		'01000111' => '47',
		'01001000' => '48',
		'01001001' => '49',
		'01001010' => '4a',
		'01001011' => '4b',
		'01001100' => '4c',
		'01001101' => '4d',
		'01001110' => '4e',
		'01001111' => '4f',
		'01010000' => '50',
		'01010001' => '51',
		'01010010' => '52',
		'01010011' => '53',
		'01010100' => '54',
		'01010101' => '55',
		'01010110' => '56',
		'01010111' => '57',
		'01011000' => '58',
		'01011001' => '59',
		'01011010' => '5a',
		'01011011' => '5b',
		'01011100' => '5c',
		'01011101' => '5d',
		'01011110' => '5e',
		'01011111' => '5f',
		'01100000' => '60',
		'01100001' => '61',
		'01100010' => '62',
		'01100011' => '63',
		'01100100' => '64',
		'01100101' => '65',
		'01100110' => '66',
		'01100111' => '67',
		'01101000' => '68',
		'01101001' => '69',
		'01101010' => '6a',
		'01101011' => '6b',
		'01101100' => '6c',
		'01101101' => '6d',
		'01101110' => '6e',
		'01101111' => '6f',
		'01110000' => '70',
		'01110001' => '71',
		'01110010' => '72',
		'01110011' => '73',
		'01110100' => '74',
		'01110101' => '75',
		'01110110' => '76',
		'01110111' => '77',
		'01111000' => '78',
		'01111001' => '79',
		'01111010' => '7a',
		'01111011' => '7b',
		'01111100' => '7c',
		'01111101' => '7d',
		'01111110' => '7e',
		'01111111' => '7f'
	];

	static private var HexToBin:Map<String, String> = [
		'00' => '00000000',
		'01' => '00000001',
		'02' => '00000010',
		'03' => '00000011',
		'04' => '00000100',
		'05' => '00000101',
		'06' => '00000110',
		'07' => '00000111',
		'08' => '00001000',
		'09' => '00001001',
		'0a' => '00001010',
		'0b' => '00001011',
		'0c' => '00001100',
		'0d' => '00001101',
		'0e' => '00001110',
		'0f' => '00001111',
		'10' => '00010000',
		'11' => '00010001',
		'12' => '00010010',
		'13' => '00010011',
		'14' => '00010100',
		'15' => '00010101',
		'16' => '00010110',
		'17' => '00010111',
		'18' => '00011000',
		'19' => '00011001',
		'1a' => '00011010',
		'1b' => '00011011',
		'1c' => '00011100',
		'1d' => '00011101',
		'1e' => '00011110',
		'1f' => '00011111',
		'20' => '00100000',
		'21' => '00100001',
		'22' => '00100010',
		'23' => '00100011',
		'24' => '00100100',
		'25' => '00100101',
		'26' => '00100110',
		'27' => '00100111',
		'28' => '00101000',
		'29' => '00101001',
		'2a' => '00101010',
		'2b' => '00101011',
		'2c' => '00101100',
		'2d' => '00101101',
		'2e' => '00101110',
		'2f' => '00101111',
		'30' => '00110000',
		'31' => '00110001',
		'32' => '00110010',
		'33' => '00110011',
		'34' => '00110100',
		'35' => '00110101',
		'36' => '00110110',
		'37' => '00110111',
		'38' => '00111000',
		'39' => '00111001',
		'3a' => '00111010',
		'3b' => '00111011',
		'3c' => '00111100',
		'3d' => '00111101',
		'3e' => '00111110',
		'3f' => '00111111',
		'40' => '01000000',
		'41' => '01000001',
		'42' => '01000010',
		'43' => '01000011',
		'44' => '01000100',
		'45' => '01000101',
		'46' => '01000110',
		'47' => '01000111',
		'48' => '01001000',
		'49' => '01001001',
		'4a' => '01001010',
		'4b' => '01001011',
		'4c' => '01001100',
		'4d' => '01001101',
		'4e' => '01001110',
		'4f' => '01001111',
		'50' => '01010000',
		'51' => '01010001',
		'52' => '01010010',
		'53' => '01010011',
		'54' => '01010100',
		'55' => '01010101',
		'56' => '01010110',
		'57' => '01010111',
		'58' => '01011000',
		'59' => '01011001',
		'5a' => '01011010',
		'5b' => '01011011',
		'5c' => '01011100',
		'5d' => '01011101',
		'5e' => '01011110',
		'5f' => '01011111',
		'60' => '01100000',
		'61' => '01100001',
		'62' => '01100010',
		'63' => '01100011',
		'64' => '01100100',
		'65' => '01100101',
		'66' => '01100110',
		'67' => '01100111',
		'68' => '01101000',
		'69' => '01101001',
		'6a' => '01101010',
		'6b' => '01101011',
		'6c' => '01101100',
		'6d' => '01101101',
		'6e' => '01101110',
		'6f' => '01101111',
		'70' => '01110000',
		'71' => '01110001',
		'72' => '01110010',
		'73' => '01110011',
		'74' => '01110100',
		'75' => '01110101',
		'76' => '01110110',
		'77' => '01110111',
		'78' => '01111000',
		'79' => '01111001',
		'7a' => '01111010',
		'7b' => '01111011',
		'7c' => '01111100',
		'7d' => '01111101',
		'7e' => '01111110',
		'7f' => '01111111'
	];

	public function new() {}
	
	
	/* INTERFACE interealmGames.editorBackend.serializer.Serializer.Serializer<T> */
	
	// hex to bin
	public function decode(s:String):Dynamic 
	{
		return HexSerializer.HexToBin.get(s);
	}
	
	// bin to hex
	public function encode(t:Dynamic):String 
	{
		return HexSerializer.BinToHex.get(s);
	}
}
